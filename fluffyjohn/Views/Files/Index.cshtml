@using Microsoft.AspNetCore.Identity
@using fluffyjohn.Areas.Identity.Data
@using Microsoft.AspNetCore.Mvc;
@using fluffyjohn.Utils.Security;

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "View Files";

    // Variables definitions
    string? reqDirPath = Url!.RouteUrl(ViewContext.RouteData.Values);
    string? userFilesDirPath = "./UserFileStorer/" + SecurityUtils.MD5Hash(User.Identity!.Name!) + reqDirPath!.Substring("/ViewFiles".Length);

    string[] fileEntries = Directory.GetFiles(userFilesDirPath);
    string[] dirEntries = Directory.GetDirectories(userFilesDirPath);

    string[] processedFileEntries = fileEntries;
    string[] processedDirEntries = dirEntries;

    // Functions
    void ProcessRequestDirName()
    {
        for (int i = 0; i < reqDirPath!.Length; i++)
        {
            reqDirPath = reqDirPath.Replace("//", "/");
        }
    }

    void ProcessPathNames()
    {
        // Prevent actual file path on server machine from being displayed to user
        for (var i = 0; i < fileEntries.Length; i++)
        {
            processedFileEntries[i] = fileEntries[i].Replace(userFilesDirPath + "\\", "");
        }

        for (var i = 0; i < dirEntries.Length; i++)
        {
            processedDirEntries[i] = dirEntries[i].Replace(userFilesDirPath + "\\", "");
        }
    }

    // Call
    ProcessRequestDirName();
    ProcessPathNames();
}   

<h1>Files Index</h1>
<div>Path: @reqDirPath</div>

<br />

<form action="/Files/Upload" method="post" enctype="multipart/form-data">
    <input type="file" name="uploads" multiple/>
    <input type="submit" />
</form>

@{
    foreach (var file in processedFileEntries)
    {
        <div>@file</div>
        <br />
    }   

    for (int i = 0; i < processedDirEntries.Length; i++)
    {
        <a href="@dirEntries[i]">@processedDirEntries[i]</a>
    }
}
<br /> <br />
