@using Microsoft.AspNetCore.Identity
@using fluffyjohn.Areas.Identity.Data
@using Microsoft.AspNetCore.Mvc;
@using fluffyjohn;
@using System.Net;

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "View Files";

    string? reqDirPath = (string)Url!.RouteUrl(ViewContext.RouteData.Values)!.Substring("viewfiles".Length + 1).Replace("//", "/");
    reqDirPath = WebUtility.UrlDecode(reqDirPath);

    foreach (var character in reqDirPath) {
        reqDirPath = reqDirPath.Replace("//", "/");
    }

    if (reqDirPath.EndsWith("/") != true)
        reqDirPath += "/"; // Quick hack to remove the "/" prefixed in files and directory names

    string? hashedUsername = SecurityUtils.MD5Hash(User.Identity!.Name!);

    string? rootUserDir = $"{Directory.GetCurrentDirectory()}/UserFileStorer/{hashedUsername}/";
    string? currentTargetDir = $"{rootUserDir}/{reqDirPath}";
    bool routeExists = Directory.Exists(currentTargetDir);

    string[] fileEntries = { };
    string[] dirEntries = { };

    if (routeExists)
    {
        fileEntries = Directory.GetFiles(currentTargetDir);
        dirEntries = Directory.GetDirectories(currentTargetDir);
        PathFormatter.FormatEntries(ref fileEntries, reqDirPath, rootUserDir);
        PathFormatter.FormatEntries(ref dirEntries, reqDirPath, rootUserDir);
    }

    int fileEntryCount = fileEntries.Length;
    int dirEntryCount = dirEntries.Length;
}   

<head>
    <link rel="stylesheet" href="~/css/storage.css" />
    <link rel="stylesheet" href="~/css/toast.css" />
    <link rel="stylesheet" href="~/css/icons.css" />

    <style>
        input[type=submit] {
            outline: 2px solid white;
            border-radius: 0.4em;
            padding: 0.2em 1.2em;
            margin: 0 1em;
            font-weight: 500;
        }

        input[type=submit]:active {
        position: relative;
            top: 1px;    
        }
    </style>
</head>

<div id="toast-container"></div>

<h1>Upload</h1>
<section>
    <form action="/files/upload" method="post" enctype="multipart/form-data">
        <label>Upload file(s): </label>
        <input type="file" name="uploads" multiple /> <br />
        <input type="submit" value="Upload File(s)">
    </form>
    <br /> 
    <form action="/files/newdir" method="post">
        <label style="font-size: 1.5em; margin: 0.1em;">Directory name: </label> 
        <input type="text" name="dirname" />
        <input type="submit" value="Create" />
    </form>
</section>

<br /> 
<div id="dir-selector">
    <a class="dir-select" href="/viewfiles/">Home/</a>

</div> <br />

@{
    if (!routeExists)
    {
        <h1 class="text-danger">Route does not exist</h1>
        <div>You're entered a file path which does not exist.</div>
        return;
    }

    <h1>Files</h1>

    for (int i = 0; i < fileEntryCount; i++)
    {
        string viewContentPath = $"viewcontent{reqDirPath}{fileEntries[i]}";
        string downloadFilePath = $"downloadfile{reqDirPath}{fileEntries[i]}";
        viewContentPath.Replace("//", "/");
        downloadFilePath.Replace("//", "/");

        <div>
            <div id="item-@i" class="item-entry-wrapper" onclick="javascript:document.location.href='/viewcontent\@reqDirPath@fileEntries[i]'"><a href="/viewcontent\@reqDirPath@fileEntries[i]" target="_blank">@fileEntries[i]</a></div>

            <a href="javascript:void(0);" onclick="renameItem('@reqDirPath@fileEntries[i]')" class="item-action-btn"> <img class="icon" src="~/svg/edit.svg" /> </a>
            <a href="javascript:void(0);" onclick="confirmDelete('@fileEntries[i]', '@reqDirPath@fileEntries[i]', true)" class="item-action-btn"> <img class="icon del-icon" src="~/svg/delete.svg" /> </a>
            <a class="item-action-btn" href="/@downloadFilePath"> <img class="icon" src="~/svg/download.svg" /> </a>
            <a class="item-action-btn" href="/@viewContentPath"> <img class="icon" src="~/svg/view.svg" /> </a>
            <a href="javascript:void(0);" onclick="copy('@reqDirPath@fileEntries[i]');" class="item-action-btn"> <img class="icon" src="~/svg/copy.svg" /></a>
            <a href="javascript:void(0);" onclick="javascript:handleSelect('@reqDirPath@fileEntries[i]', 'item-@i')" class="item-action-btn">S</a>

            <br />
        </div>
    }

    <br />
    <h1>Folders</h1>

    for (int i = 0; i <  dirEntryCount; i++)
    {
        string targetHref = $"/viewfiles/{reqDirPath}/{dirEntries[i]}/";
        int id = (fileEntryCount) + i;

        <div>
        <div id="item-@id" class="item-entry-wrapper itype-dir" onclick="javascript:window.location.href = '@Utility.ConfigureDirHref(targetHref)'" >
            <a href=@Utility.ConfigureDirHref(targetHref)>@dirEntries[i]/</a>
        </div>

        <a href="javascript:void(0);" onclick="renameItem('@reqDirPath/@dirEntries[i]', false)" class="item-action-btn"> <img class="icon" src="~/svg/edit.svg" /> </a>
        <a onclick="confirmDelete('@dirEntries[i]', '@reqDirPath@dirEntries[i]', false)" href="#" class="item-action-btn"> <img class="icon del-icon" src="~/svg/delete.svg" /> </a>
        <a href="javascript:void(0);" onclick="copy('@reqDirPath/@dirEntries[i]', false);" class="item-action-btn"> <img class="icon" src="~/svg/copy.svg" /></a>

        <a onclick="javascript:handleSelect('@reqDirPath@dirEntries[i]/', 'item-@id')" class="item-action-btn">S</a>

        </div>
    }
}

<br /> <br />

<button onclick="paste()">Paste</button>

<button onclick="selectCopy()">Copy Selected Item(s)</button>
<button onclick="deleteCopy()">Delete Selected Item(s)</button>

<!--Make space for footer-->
<br />
<br />
<br />
<br />


<script src="~/js/toast.js"></script>
<script src="~/js/dirselect.js"></script>
<script src="~/js/storage.js"></script>
<script src="~/js/delete.js"></script>
<script src="~/js/rename.js"></script>
<script src="~/js/copy.js"></script>
<script src="~/js/paste.js"></script>
<script src="~/js/select.js"></script>