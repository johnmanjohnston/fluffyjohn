@using Microsoft.AspNetCore.Identity
@using fluffyjohn.Areas.Identity.Data
@using Microsoft.AspNetCore.Mvc;
@using fluffyjohn;

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "View Files";

    string? reqDirPath = (string)Url!.RouteUrl(ViewContext.RouteData.Values)!.Substring("ViewFiles".Length + 1).Replace("//", "/");
    reqDirPath += "/"; // Quick hack to remove the "/" prefixed in files and directory names

    string? encryptedUsername = SecurityUtils.MD5Hash(User.Identity!.Name!);

    string? rootUserDir = $"{Directory.GetCurrentDirectory()}/UserFileStorer/{encryptedUsername}/";
    string? currentTargetDir = $"{rootUserDir}/{reqDirPath}";

    string[] fileEntries = Directory.GetFiles(currentTargetDir);
    string[] dirEntries = Directory.GetDirectories(currentTargetDir);

    int fileEntryCount = fileEntries.Length;
    int dirEntryCount = dirEntries.Length;

    PathFormatter.FormatEntries(ref fileEntries, reqDirPath, rootUserDir);
    PathFormatter.FormatEntries(ref dirEntries, reqDirPath, rootUserDir);
}   

<head>
    <link rel="stylesheet" href="~/css/storage.css" />
</head>

<h1>Contents</h1>

<div>dir-selector:</div>
<div id="dir-selector">


</div>

<h1>also a note for you john. is your sass code not working? remember to compile with the right filenames, you monkey</h1>

@{

    for (int i = 0; i < fileEntryCount; i++)
    {
        <div class="item-entry-wrapper">@fileEntries[i]</div>
    }
}

@{
    for (int i = 0; i <  dirEntryCount; i++)
    {
        string targetHref = $"/ViewFiles/{reqDirPath}/{dirEntries[i]}";

        <div class="item-entry-wrapper">
            <a href=@Utility.ConfigureDirHref(targetHref)>@dirEntries[i]/</a>
        </div>
    }
}

<br />

<form action="/Files/Upload" method="post" enctype="multipart/form-data">
    <input type="file" name="uploads" multiple />
    <input type="submit" />
</form>

<script src="~/js/dirselect.js"></script>